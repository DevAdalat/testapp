// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

class NativeLibrary {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  NativeLibrary(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  NativeLibrary.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  ffi.Pointer<ffi.Char> rust_greeting(
    ffi.Pointer<ffi.Char> to,
  ) {
    return _rust_greeting(
      to,
    );
  }

  late final _rust_greetingPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(
              ffi.Pointer<ffi.Char>)>>('rust_greeting');
  late final _rust_greeting = _rust_greetingPtr
      .asFunction<ffi.Pointer<ffi.Char> Function(ffi.Pointer<ffi.Char>)>();

  void rust_cstr_free(
    ffi.Pointer<ffi.Char> s,
  ) {
    return _rust_cstr_free(
      s,
    );
  }

  late final _rust_cstr_freePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Char>)>>(
          'rust_cstr_free');
  late final _rust_cstr_free =
      _rust_cstr_freePtr.asFunction<void Function(ffi.Pointer<ffi.Char>)>();

  ffi.Pointer<ffi.Char> init_image_size(
    ffi.Pointer<ffi.Char> path,
  ) {
    return _init_image_size(
      path,
    );
  }

  late final _init_image_sizePtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(
              ffi.Pointer<ffi.Char>)>>('init_image_size');
  late final _init_image_size = _init_image_sizePtr
      .asFunction<ffi.Pointer<ffi.Char> Function(ffi.Pointer<ffi.Char>)>();

  ffi.Pointer<ffi.Char> is_image_size_work_done() {
    return _is_image_size_work_done();
  }

  late final _is_image_size_work_donePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>(
          'is_image_size_work_done');
  late final _is_image_size_work_done = _is_image_size_work_donePtr
      .asFunction<ffi.Pointer<ffi.Char> Function()>();

  ffi.Pointer<ffi.Char> get_image_size() {
    return _get_image_size();
  }

  late final _get_image_sizePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>(
          'get_image_size');
  late final _get_image_size =
      _get_image_sizePtr.asFunction<ffi.Pointer<ffi.Char> Function()>();

  ffi.Pointer<ffi.Char> init_videos_size(
    ffi.Pointer<ffi.Char> path,
  ) {
    return _init_videos_size(
      path,
    );
  }

  late final _init_videos_sizePtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(
              ffi.Pointer<ffi.Char>)>>('init_videos_size');
  late final _init_videos_size = _init_videos_sizePtr
      .asFunction<ffi.Pointer<ffi.Char> Function(ffi.Pointer<ffi.Char>)>();

  ffi.Pointer<ffi.Char> is_videos_size_work_done() {
    return _is_videos_size_work_done();
  }

  late final _is_videos_size_work_donePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>(
          'is_videos_size_work_done');
  late final _is_videos_size_work_done = _is_videos_size_work_donePtr
      .asFunction<ffi.Pointer<ffi.Char> Function()>();

  ffi.Pointer<ffi.Char> get_videos_size() {
    return _get_videos_size();
  }

  late final _get_videos_sizePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>(
          'get_videos_size');
  late final _get_videos_size =
      _get_videos_sizePtr.asFunction<ffi.Pointer<ffi.Char> Function()>();

  ffi.Pointer<ffi.Char> init_apks_size(
    ffi.Pointer<ffi.Char> path,
  ) {
    return _init_apks_size(
      path,
    );
  }

  late final _init_apks_sizePtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(
              ffi.Pointer<ffi.Char>)>>('init_apks_size');
  late final _init_apks_size = _init_apks_sizePtr
      .asFunction<ffi.Pointer<ffi.Char> Function(ffi.Pointer<ffi.Char>)>();

  ffi.Pointer<ffi.Char> is_apk_size_work_done() {
    return _is_apk_size_work_done();
  }

  late final _is_apk_size_work_donePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>(
          'is_apk_size_work_done');
  late final _is_apk_size_work_done =
      _is_apk_size_work_donePtr.asFunction<ffi.Pointer<ffi.Char> Function()>();

  ffi.Pointer<ffi.Char> get_apk_size() {
    return _get_apk_size();
  }

  late final _get_apk_sizePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>(
          'get_apk_size');
  late final _get_apk_size =
      _get_apk_sizePtr.asFunction<ffi.Pointer<ffi.Char> Function()>();

  ffi.Pointer<ffi.Char> init_musics_size(
    ffi.Pointer<ffi.Char> path,
  ) {
    return _init_musics_size(
      path,
    );
  }

  late final _init_musics_sizePtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(
              ffi.Pointer<ffi.Char>)>>('init_musics_size');
  late final _init_musics_size = _init_musics_sizePtr
      .asFunction<ffi.Pointer<ffi.Char> Function(ffi.Pointer<ffi.Char>)>();

  ffi.Pointer<ffi.Char> is_musics_size_work_done() {
    return _is_musics_size_work_done();
  }

  late final _is_musics_size_work_donePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>(
          'is_musics_size_work_done');
  late final _is_musics_size_work_done = _is_musics_size_work_donePtr
      .asFunction<ffi.Pointer<ffi.Char> Function()>();

  ffi.Pointer<ffi.Char> get_musics_size() {
    return _get_musics_size();
  }

  late final _get_musics_sizePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>(
          'get_musics_size');
  late final _get_musics_size =
      _get_musics_sizePtr.asFunction<ffi.Pointer<ffi.Char> Function()>();

  ffi.Pointer<ffi.Char> init_docs_size(
    ffi.Pointer<ffi.Char> path,
  ) {
    return _init_docs_size(
      path,
    );
  }

  late final _init_docs_sizePtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Char> Function(
              ffi.Pointer<ffi.Char>)>>('init_docs_size');
  late final _init_docs_size = _init_docs_sizePtr
      .asFunction<ffi.Pointer<ffi.Char> Function(ffi.Pointer<ffi.Char>)>();

  ffi.Pointer<ffi.Char> is_docs_size_work_done() {
    return _is_docs_size_work_done();
  }

  late final _is_docs_size_work_donePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>(
          'is_docs_size_work_done');
  late final _is_docs_size_work_done =
      _is_docs_size_work_donePtr.asFunction<ffi.Pointer<ffi.Char> Function()>();

  ffi.Pointer<ffi.Char> get_docs_size() {
    return _get_docs_size();
  }

  late final _get_docs_sizePtr =
      _lookup<ffi.NativeFunction<ffi.Pointer<ffi.Char> Function()>>(
          'get_docs_size');
  late final _get_docs_size =
      _get_docs_sizePtr.asFunction<ffi.Pointer<ffi.Char> Function()>();
}
