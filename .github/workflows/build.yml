name: Build and Release

on: [push]


jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: Release
            command: --release
          - name: Split per abi
            command: --split-per-abi
          - name: Debug
            command: --debug
    name: Build APK
    runs-on: ubuntu-22.04
    steps: 
      - name: clone repo
        uses: actions/checkout@v1
      - name: setup flutter
        run: sudo snap install flutter --classic
      - name: flutter version
        run: flutter doctor
      - name: accecpt licences
        run:  yes | flutter doctor --android-licenses
      - name: Set Path
        run: >
          find -L $ANDROID_SDK_ROOT/ndk/$ANDROID_NDK_VERSION -name libunwind.a  -execdir sh -c 'echo "INPUT(-lunwind)" > libgcc.a' \;
      - name: Build rust lib 
        run: cd rust && make init && make android && make bindings && tree -h && cd ..
      - name: Copy binary
        run: |
          pwd
          mv rust/target/aarch64-linux-android/release/libstorage.so android/app/src/main/jniLibs/arm64-v8a/libstorage.so
          mv rust/target/armv7-linux-androideabi/release/libstorage.so android/app/src/main/jniLibs/armeabi-v7a/libstorage.so
          mv rust/target/i686-linux-android/release/libstorage.so android/app/src/main/jniLibs/x86/libstorage.so
          mv rust/target/x86_64-linux-android/release/libstorage.so android/app/src/main/jniLibs/x86_64/libstorage.so
      - name: Check files
        run: tree -h android/app/src/main/jniLibs
      - name: build APK
        run: flutter build apk ${{ matrix.command }}
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +%Y%m%d%H%M)"          
      - name: upload to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: Testapp-${{ steps.date.outputs.date }}
          files: build/app/outputs/flutter-apk/*
