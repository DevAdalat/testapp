name: Build and Release

on: [push]


jobs:
  build:
    name: Build APK
    runs-on: ubuntu-22.04
    steps:
      - name: clone repo
        uses: actions/checkout@v1
      - name: setup flutter
        run: sudo snap install flutter --classic
      - name: flutter version
        run: flutter doctor
      - name: accecpt licences
        run:  yes | flutter doctor --android-licenses
      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1.0.6
        id: setup-ndk
        with:
          ndk-version: r25b
          add-to-path: false
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
#     - name: Build go library
#       run: |
#         env GOOS=android GOARCH=arm64 go build -buildmode=c-shared -ldflags="-s -w" -o android/app/src/main/jniLibs/arm64-v8a/libtest.so gocode/test.go
#         env GOOS=android GOARCH=arm go build -buildmode=c-shared -ldflags="-s -w" -o android/app/src/main/jniLibs/armeabi-v7a/libtest.so gocode/test.go
#         env GOOS=android GOARCH=386 go build -buildmode=c-shared -ldflags="-s -w" -o android/app/src/main/jniLibs/x86/libtest.so gocode/test.go
#         env GOOS=android GOARCH=amd64 go build -buildmode=c-shared -ldflags="-s -w" -o android/app/src/main/jniLibs/x86_64/libtest.so gocode/test.go
#         find -type f -name libtest.h -exec rm -rf {} \;
      - name: Build rust lib
        run: cd rust && make init && cargo build && make android && make bindings && curl -T target/bindings.h https://free.keep.sh && cd ..
      - name: Move APK
        run: cp rust/target/aarch64-linux-android/release/libexample.so android/app/src/main/jniLibs/arm64-v8a/
      - name: build APK
        run: flutter build apk --target-platform=android-arm64
      - name: upload to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: master
          files: build/app/outputs/flutter-apk/*
