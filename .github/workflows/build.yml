name: Build and Release

on: [push]


jobs:
  build:
    name: Build APK
    runs-on: ubuntu-22.04
    steps:
      - name: clone repo
        uses: actions/checkout@v1
      - name: setup flutter
        run: sudo snap install flutter --classic
      - name: flutter version
        run: flutter doctor
      - name: accecpt licences
        run:  yes | flutter doctor --android-licenses
      - name: Set Path
        run: >
          find -L $ANDROID_SDK_ROOT/ndk/$ANDROID_NDK_VERSION -name libunwind.a  -execdir sh -c 'echo "INPUT(-lunwind)" > libgcc.a' \;
      - name: Build rust lib 
        run: cd rust && make init && make android && make bindings && tree -h && cd ..
      - name: Upload bindings
        run: curl -T rust/target/bindings.h https://free.keep.sh
#     - name: Upload file
#       run: curl -T ./rust/target/bindings.h https://free.keep.sh
      - name: Upload Binary
        run: curl -T rust/target/aarch64-linux-android/release/libstorage.so https://free.keep.sh
      - name: Copy Libs
        run: |
          cp rust/target/armv7-linux-androideabi/release/libstorage.so android/app/src/main/jniLibs/armeabi-v7a/
          cp rust/target/aarch64-linux-android/release/libstorage.so android/app/src/main/jniLibs/arm64-v8a/
          cp rust/target/i686-linux-android/release/libstorage.so android/app/src/main/jniLibs/x86/
          cp rust/target/x86_64-linux-android/release/libstorage.so android/app/src/main/jniLibs/x86_64/
          tree -h android/app/src/main/jniLibs
#     - name: Build go library
#       run: |
#         env GOOS=android GOARCH=arm64 go build -buildmode=c-shared -ldflags="-s -w" -o android/app/src/main/jniLibs/arm64-v8a/libtest.so gocode/test.go
#         env GOOS=android GOARCH=arm go build -buildmode=c-shared -ldflags="-s -w" -o android/app/src/main/jniLibs/armeabi-v7a/libtest.so gocode/test.go
#         env GOOS=android GOARCH=386 go build -buildmode=c-shared -ldflags="-s -w" -o android/app/src/main/jniLibs/x86/libtest.so gocode/test.go
#         env GOOS=android GOARCH=amd64 go build -buildmode=c-shared -ldflags="-s -w" -o android/app/src/main/jniLibs/x86_64/libtest.so gocode/test.go
#         find -type f -name libtest.h -exec rm -rf {} \;
      - name: build APK
        run: flutter build apk --target-platform=android-arm64
      - name: upload to release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: master
          files: build/app/outputs/flutter-apk/*
